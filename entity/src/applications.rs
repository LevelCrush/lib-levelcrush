//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "applications")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    #[sea_orm(unique)]
    pub hash: String,
    pub hash_secret: String,
    pub name: String,
    pub host: String,
    pub created_at: i64,
    pub updated_at: i64,
    pub deleted_at: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::application_global_settings::Entity")]
    ApplicationGlobalSettings,
    #[sea_orm(has_many = "super::application_process_logs::Entity")]
    ApplicationProcessLogs,
    #[sea_orm(has_many = "super::application_processes::Entity")]
    ApplicationProcesses,
    #[sea_orm(has_many = "super::application_settings::Entity")]
    ApplicationSettings,
    #[sea_orm(has_many = "super::application_user_settings::Entity")]
    ApplicationUserSettings,
}

impl Related<super::application_global_settings::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ApplicationGlobalSettings.def()
    }
}

impl Related<super::application_process_logs::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ApplicationProcessLogs.def()
    }
}

impl Related<super::application_processes::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ApplicationProcesses.def()
    }
}

impl Related<super::application_settings::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ApplicationSettings.def()
    }
}

impl Related<super::application_user_settings::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ApplicationUserSettings.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
