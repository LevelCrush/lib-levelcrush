//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "application_process_logs")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub application: i64,
    pub process: i64,
    #[sea_orm(unique)]
    pub hash: String,
    pub hash_sub: String,
    pub r#type: i8,
    #[sea_orm(column_type = "Text")]
    pub content: String,
    pub created_at: i64,
    pub updated_at: i64,
    pub deleted_at: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::application_processes::Entity",
        from = "Column::Process",
        to = "super::application_processes::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    ApplicationProcesses,
    #[sea_orm(
        belongs_to = "super::applications::Entity",
        from = "Column::Application",
        to = "super::applications::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Applications,
}

impl Related<super::application_processes::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ApplicationProcesses.def()
    }
}

impl Related<super::applications::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Applications.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
